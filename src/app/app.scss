// http://ionicframework.com/docs/theming/
// App Global Sass
// --------------------------------------------------
// Put style rules here that you want to apply globally. These
// styles are for the entire app and not just one component.
// Additionally, this file can be also used as an entry point
// to import other Sass files to be included in the output CSS.
//
// Shared Sass variables, which can be used to adjust Ionic's
// default Sass variables, belong in "theme/variables.scss".
//
// To declare rules for a specific mode, create a child rule
// for the .md, .ios, or .wp mode classes. The mode class is
// automatically applied to the <body> element in the app.
clr-icon {
  display: inline-block;
  margin: 0;
  height: 16px;
  width: 16px;
  vertical-align: middle;
  fill: currentColor;
}

clr-icon .transparent-fill-stroke {
  stroke: currentColor;
}

clr-icon.is-green,
clr-icon.is-success {
  fill: #318700;
}

clr-icon.is-green .transparent-fill-stroke,
clr-icon.is-success .transparent-fill-stroke {
  stroke: #318700;
}

clr-icon.is-red,
clr-icon.is-danger,
clr-icon.is-error {
  fill: #e62700;
}

clr-icon.is-red .transparent-fill-stroke,
clr-icon.is-danger .transparent-fill-stroke,
clr-icon.is-error .transparent-fill-stroke {
  stroke: #e62700;
}

clr-icon.is-warning {
  fill: #fac400;
}

clr-icon.is-warning .transparent-fill-stroke {
  stroke: #fac400;
}

clr-icon.is-blue,
clr-icon.is-info {
  fill: #007CBB;
}

clr-icon.is-blue .transparent-fill-stroke,
clr-icon.is-info .transparent-fill-stroke {
  stroke: #007CBB;
}

clr-icon.is-white,
clr-icon.is-inverse {
  fill: #FFFFFF;
}

clr-icon.is-white .transparent-fill-stroke,
clr-icon.is-inverse .transparent-fill-stroke {
  stroke: #FFFFFF;
}

clr-icon.is-highlight {
  fill: #007CBB;
}

clr-icon.is-highlight .transparent-fill-stroke {
  stroke: #007CBB;
}

clr-icon[shape$=" up"] svg,
clr-icon[dir="up"] svg {
  -webkit-transform: rotate(0deg);
  transform: rotate(0deg);
}

clr-icon[shape$=" down"] svg,
clr-icon[dir="down"] svg {
  -webkit-transform: rotate(180deg);
  transform: rotate(180deg);
}

clr-icon[shape$=" right"] svg,
clr-icon[dir="right"] svg {
  -webkit-transform: rotate(90deg);
  transform: rotate(90deg);
}

clr-icon[shape$=" left"] svg,
clr-icon[dir="left"] svg {
  -webkit-transform: rotate(270deg);
  transform: rotate(270deg);
}

clr-icon[flip="horizontal"] svg {
  -webkit-transform: scale(-1) rotateX(180deg);
  transform: scale(-1) rotateX(180deg);
}

clr-icon[flip="vertical"] svg {
  -webkit-transform: scale(-1) rotateY(180deg);
  transform: scale(-1) rotateY(180deg);
}

clr-icon .clr-i-badge {
  fill: #e62700;
}

clr-icon .clr-i-badge .transparent-fill-stroke {
  stroke: #e62700;
}

clr-icon>* {
  height: 100%;
  width: 100%;
  display: block;
  pointer-events: none;
}

clr-icon>svg {
  transition: inherit;
}

clr-icon>svg title {
  display: none;
}

clr-icon .clr-i-solid,
clr-icon .clr-i-solid--badged,
clr-icon .clr-i-solid--alerted {
  display: none;
}

clr-icon .clr-i-outline--alerted:not(.clr-i-outline),
clr-icon .clr-i-outline--badged:not(.clr-i-outline) {
  display: none;
}

clr-icon[class*="has-alert"] .can-alert .clr-i-outline--alerted {
  display: block;
}

clr-icon[class*="has-alert"] .can-alert .clr-i-outline:not(.clr-i-outline--alerted) {
  display: none;
}

clr-icon[class*="has-badge"] .can-badge .clr-i-outline--badged {
  display: block;
}

clr-icon[class*="has-badge"] .can-badge .clr-i-outline:not(.clr-i-outline--badged) {
  display: none;
}

clr-icon.is-solid .has-solid .clr-i-solid {
  display: block;
}

clr-icon.is-solid .has-solid .clr-i-outline,
clr-icon.is-solid .has-solid .clr-i-outline--badged {
  display: none;
}

clr-icon.is-solid .has-solid .clr-i-solid--alerted:not(.clr-i-solid),
clr-icon.is-solid .has-solid .clr-i-solid--badged:not(.clr-i-solid) {
  display: none;
}

clr-icon.is-solid[class*="has-badge"] .can-badge.has-solid .clr-i-solid--badged {
  display: block;
}

clr-icon.is-solid[class*="has-badge"] .can-badge.has-solid .clr-i-outline,
clr-icon.is-solid[class*="has-badge"] .can-badge.has-solid .clr-i-outline--badged,
clr-icon.is-solid[class*="has-badge"] .can-badge.has-solid .clr-i-solid:not(.clr-i-solid--badged) {
  display: none;
}

clr-icon.is-solid[class*="has-alert"] .can-alert.has-solid .clr-i-solid--alerted {
  display: block;
}

clr-icon.is-solid[class*="has-alert"] .can-alert.has-solid .clr-i-outline,
clr-icon.is-solid[class*="has-alert"] .can-alert.has-solid .clr-i-outline--alerted,
clr-icon.is-solid[class*="has-alert"] .can-alert.has-solid .clr-i-solid:not(.clr-i-solid--alerted) {
  display: none;
}

clr-icon.has-badge--success .clr-i-badge {
  fill: #FF0392;
}

clr-icon.has-badge--success .clr-i-badge .transparent-fill-stroke {
  stroke: #FF0392;
}

clr-icon.has-badge--error .clr-i-badge {
  fill: #e62700;
}

clr-icon.has-badge--error .clr-i-badge .transparent-fill-stroke {
  stroke: #e62700;
}

clr-icon.has-badge--info .clr-i-badge {
  fill: #007CBB;
}

clr-icon.has-badge--info .clr-i-badge .transparent-fill-stroke {
  stroke: #007CBB;
}

clr-icon.has-alert .clr-i-alert {
  fill: #fac400;
}

clr-icon.has-alert .clr-i-alert .transparent-fill-stroke {
  stroke: #fac400;
}

clr-icon .is-off-screen {
  position: fixed !important;
  border: none !important;
  height: 1px !important;
  width: 1px !important;
  left: 0px !important;
  top: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  margin: 0 0 -1px 0 !important;
}


/* General Styles */

body {
  font-family: 'Titillium Web', sans-serif;
}

h1,
h2,
h3,
{
  font-family: 'Titillium Web', sans-serif;
  font-weight: 700;
}

h4,
h5,
h6,
.title {
  font-family: 'Titillium Web', sans-serif;
  font-weight: 600;
}

.label,
.badge,
p,
button {
  font-family: 'Titillium Web', sans-serif;
  font-weight: 300;
}

.text-divider {
  position: relative;
  width: 60%;
  margin: 15px auto;
  text-align: center;
  span {
    color: #fff;
    text-transform: uppercase;
    font-size: .8em;
  }
  &:before,
  &:after {
    content: "";
    position: absolute;
    top: 49%;
    width: 35%;
    height: 1px;
    background-color: #fff;
  }
  &:before {
    left: 0;
  }
  &:after {
    right: 0;
  }
  &.dark {
    span {
      color: #9B9387;
    }
    &:before,
    &:after {
      background-color: #9B9387;
    }
  }
}


/* Side Menu Styles */

.main-menu {
  .header:after {
    display: none;
  }
  .toolbar {
    padding: 2em 0 1em 0;
    border-bottom: 3px solid #fff;
    .toolbar-background {
      background-color: #FF0392;
    }
    .toolbar-title {
      text-align: center;
      color: #fff;
      margin-top: .6em;
    }
    .menu-info {
      text-align: center;
      .label {
        color: #fff;
        background-color: rgba(0, 0, 0, .4);
        border-radius: 15px;
        font-size: .8em;
        display: inline-block;
        padding: 5px 10px;
      }
    }
    .user-cats {
      display: none;
      background-color: rgba(0, 0, 0, .4);
      text-align: center;
      padding: 25px 15px;
      .badge {
        border-radius: 30px;
        margin: 5px 5px;
        background-color: #212121;
      }
    }
  }
  .content {
    background-color: #212121;
    .list {
      background-color: transparent;
      margin-top: 15px;
      .item {
        background-color: transparent;
        padding-left: 30px;
        color: #fff;
        .item-inner {
          border-bottom: none;
          .label {
            font-weight: 600;
          }
        }
      }
    }
    .menu-footer {
      position: absolute;
      bottom: 0;
      left: 30px;
      right: 30px;
      display: flex;
      display: -webkit-flex;
      justify-content: space-between;
      align-items: center;
      padding: 0;
      .label {
        color: #fff;
      }
      .help-list {
        button {
          display: inline-block;
          font-weight: lighter;
          font-weight: 12px;
          color: darken(#fff, 20%);
          background-color: transparent;
          margin-left: 5px;
        }
      }
    }
  }
}
